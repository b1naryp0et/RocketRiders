{"version":3,"sources":["../../game/static/scripts/title.js"],"names":["demoShip","demoBadShips","demoEnemies","demoMode","title","topScore","scoreText","TitleScene","ship","shot","blast","blasts","get","body","position","x","y","setActive","setVisible","play","setPosition","setVelocity","setTimeout","texture","key","two_player","pmath","Between","load","image","atlas","text","sky","add","tileSprite","setDepth","toString","fontSize","fill","physics","sprite","setBounce","setCollideWorldBounds","Ship","update","ai2","anims","create","frames","group","defaultKey","maxSize","goodshots","badshots","collider","ph","bulletHit","time","addEvent","delay","callback","randx","setAngle","setRotation","pi","casing","undefined","enemy","children","each","fellow","bind","ai1","createTime","Date","now","nonceTime","push","callbackScope","loop","tilePositionY","kb","input","keyboard","spec","addKey","Phaser","Input","Keyboard","KeyCodes","ENTER","isDown","normal_mode","scene","start","filter","item","active","targetShip","Math","floor","random","length","shoot","offscreen","Scene"],"mappings":"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","file":"title.5a1a9cf2.js","sourceRoot":"../src","sourcesContent":["var demoShip = null;\nvar demoBadShips;\nvar demoEnemies = [];\nvar demoMode;\nvar title;\nvar topScore = 0;\nvar scoreText = '';\n\nclass TitleScene extends Phaser.Scene {\n\n    bulletHit (ship, shot) {\n        let blast = blasts.get(shot.body.position.x, shot.body.position.y);\n        blast.setActive(true);\n        blast.setVisible(true);\n        blast.play('blast');\n        shot.setPosition(-100, -100);\n        shot.setVelocity(0,0);\n        shot.setActive(false);\n        shot.setVisible(false);\n\n        ship.setPosition(-200, 0);\n        ship.setVelocity(0, 0);\n        ship.setActive(false);\n        ship.setVisible(false);\n\n        setTimeout(function () {\n            blast.setActive(false);\n            blast.setVisible(false);\n            blast.setPosition(-100, -100);\n        }, 1000);\n\n        if (ship.texture.key == 'player1' || (ship.texture.key == 'player2' && two_player)) {\n            setTimeout(function () {\n                ship.setActive(true);\n                ship.setVisible(true);\n                ship.setPosition(pmath.Between(200, 600), pmath.Between(200, 400));\n                ship.setVelocity(0, 0);\n            }, 1000);\n        }\n    }\n\n    constructor ()\n    {\n        super('TitleScene');\n    }\n\n\n    preload ()\n    {\n\n        this.load.image('sky', 'static/assets/images/starbgv.png');\n        this.load.image('player1', 'static/assets/images/blueship.png');\n        this.load.image('player2', 'static/assets/images/blueship2.png');\n        this.load.image('player3', 'static/assets/images/orangeship.png');\n        this.load.atlas('shapes', 'static/assets/images/shapes.png', 'static/assets/images/shapes.json');\n        this.load.text('space_dirt', 'static/assets/images/space_dirt.json');\n        this.load.image('goodshot', 'static/assets/images/goodshot.png');\n        this.load.image('badshot', 'static/assets/images/badshot.png');\n        this.load.image('blast1', 'static/assets/images/blast1.png');\n        this.load.image('blast2', 'static/assets/images/blast2.png');\n        this.load.image('blast3', 'static/assets/images/blast3.png');\n        this.load.image('blast4', 'static/assets/images/blast4.png');\n        this.load.image('blast5', 'static/assets/images/blast5.png');\n        this.load.image('blast6', 'static/assets/images/blast6.png');\n        this.load.image('title', 'static/assets/images/RocketTitle.png');\n\n        this.load.image('null', 'static/assets/images/null.png');\n    }\n\n\n\n    create ()\n    {\n        demoMode = true;\n        sky = this.add.tileSprite(400, 300, 800, 600, 'sky');\n        sky.setDepth(-999);\n        scoreText = this.add.text(16, 16, 'High Score: ' + topScore.toString(), { fontSize: '32px', fill: '#a66f3c' });\n        title = this.add.tileSprite(400, 300, 800, 600, 'title');\n        title.setDepth(999);\n        //dirt1 = this.add.particles('shapes',  new Function('return ' + this.cache.text.get('space_dirt'))());\n        //dirt1.setDepth(-999);\n\n        let ship = this.physics.add.sprite(100, 500, 'player1');\n        ship.setBounce(0.2);\n        ship.setCollideWorldBounds(true);\n        demoShip = ship;\n\n\n        demoShip = new Ship(demoShip, 100, 500, 1, 0);\n        demoShip.update = ai2;\n\n        this.anims.create({\n            key: 'blast',\n            frames: [\n                { key: 'blast1' },\n                { key: 'blast2' },\n                { key: 'blast3' },\n                { key: 'blast4' },\n                { key: 'blast5' },\n                { key: 'blast6' },\n                { key: 'null' },\n            ]\n        })\n\n        blasts = this.physics.add.group({\n            defaultKey: 'blast1',\n            maxSize: 200\n        })\n\n        goodshots = this.physics.add.group({\n            defaultKey: 'goodshot',\n            maxSize: 200\n        });\n\n        badshots = this.physics.add.group({\n            defaultKey: 'badshot',\n            maxSize: 200\n        });\n\n        demoBadShips = this.physics.add.group({\n            defaultKey: 'player3',\n            maxSize: 20\n        });\n\n        this.physics.add.collider(demoShip.ph, badshots, this.bulletHit, null, this);\n\n        //enemy spawn timer\n        this.time.addEvent({\n            delay: 500,\n            callback: function() {\n                if (demoMode) {\n                    let randx = pmath.Between(200, 600);\n                    let ship = demoBadShips.get(randx, -100); //this.physics.add.sprite(pmath.Between(0, 800), -100, 'player3');\n                    ship.setBounce(0.6);\n                    ship.setAngle(180)\n                    ship.setRotation(pi)\n                    if (ship.casing === undefined) { //if not created already\n                        let enemy = new Ship(ship, ship.body.position.x, ship.body.position.y, 1, 0);\n                        this.physics.add.collider(demoShip.ph, ship, null, null, this);\n                        this.physics.add.collider(ship, goodshots, this.bulletHit, null, this);\n                        demoBadShips.children.each(function (fellow) {\n                            this.physics.add.collider(ship, fellow, null, null, this);\n                        }.bind(this));\n                        enemy.update = ai1;\n                        ship.casing = enemy; //just to keep track of having been created already\n                    }\n                    ship.setActive(true);\n                    ship.setVisible(true);\n                    ship.casing.createTime = Date.now();\n                    ship.casing.nonceTime = pmath.Between(0, 6000);\n                    //enemy.update = ai2;\n                    //enemy.targetShip = ships[Math.floor(Math.random() * 2)];\n                    //enemy.ptx = pmath.Between(100, 700);\n                    //enemy.pty = pmath.Between(100, 500);\n                    //enemy.update = ai3;\n                    //enemy.update = ai4;\n                    demoEnemies.push(ship.casing);\n                }\n            },\n            callbackScope: this,\n            loop: true\n        });\n\n    }\n\n\n\n\n    update ()\n    {\n        // move sky\n        sky.tilePositionY = sky.tilePositionY - 1;\n\n        // get the movement for ship1\n        const kb = this.input.keyboard;\n        let spec =  kb.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER).isDown;\n        if (spec) {\n            spec = false;\n            demoShip.update = function () {};\n            demoShip.ph.setActive(false);\n            demoShip.ph.setVisible(false);\n            demoMode = false;\n            normal_mode = true;\n            //load next scene\n            this.scene.start('MainScene');\n        }\n        demoEnemies = demoEnemies.filter(function (item) {\n            return item.ph.active && item.ph.body.position.y < 550;\n        });\n\n        //update the demoShip\n        if (demoShip.targetShip === undefined || !demoShip.targetShip.ph.active || demoShip.targetShip.ph.body.position.y < -20 || demoShip.targetShip.ph.body.position.y > 500) {\n            demoShip.targetShip = demoEnemies[Math.floor(Math.random(demoEnemies.length))];\n        }\n        demoShip.update(false, false, false, false, false, false);\n        if (pmath.Between(0, 1000) < 30 && demoShip.targetShip.ph.body && demoShip.targetShip.ph.body.position.y > 0) {\n            demoShip.shoot(false);\n        }\n        if (pmath.Between(0, 1000000) < 500 && demoShip.ph.active){\n            demoShip.shoot(true);\n        }\n\n\n        // update and destroy enemies\n        demoBadShips.children.each(function (enemy) {\n            if (enemy.active) {\n                enemy.casing.update(false, false, false, false, false, false);\n                if (offscreen(enemy.body.position.x, enemy.body.position.y)) {\n                    enemy.setActive(false);\n                    enemy.setVisible(false);\n                    enemy.setVelocity(0, 0);\n                }\n            }\n        }.bind(this));\n\n        //destroy bullets out of range\n        goodshots.children.each(function (shot) {\n            if (shot.active) {\n                if (offscreen(shot.x, shot.y)) {\n                    shot.setActive(false);\n                    shot.setVisible(false);\n                }\n            }\n        }.bind(this));\n\n        //destroy bullets out of range\n        badshots.children.each(function (shot) {\n            if (shot.active) {\n                if (offscreen(shot.x, shot.y)) {\n                    shot.setActive(false);\n                    shot.setVisible(false);\n                }\n            }\n        }.bind(this));\n\n    }\n}\n\n\n\n"]}