{"version":3,"sources":["../../game/static/scripts/ship.js"],"names":["makeShot","shipobj","spec","shootOne","shot","angle","speed_scale","extra_speed","invertY","bod","body","setScale","setActive","setVisible","x_vel","Math","cos","rotation","y_vel","sin","setVelocityX","velocity","x","setVelocityY","y","setDepth","shooter","texture","key","shots","badshots","goodshots","active","visible","get","position","width","height","pi","vals","val","pointsTo","x1","y1","x2","y2","inaccuracy","dir","pmath","Angle","Between","min","Normalize","max","temp","rotateToPoint","ship","amt","target","ph","next","RotateTo","setRotation","setAngle","moveToPoint","rotamt","move","ai1","up","down","right","left","phase","Date","now","createTime","nonceTime","rotate","shs","ships","demoMode","demoShip","sh","shoot","ai2","targetShip","undefined","floor","random","xdist","ydist","dist","sqrt","pow","ai3","ptx","pty","ai4","off","offscreen","thisx","thisy","abs","ai5","burst","Ship","phship","scale","rot","vel_max","shotspeed","fire","acc","dec","max_vel","back","ang","xacc","PI","yacc","x_max","y_max","accel","decel","xvel","yvel","xvel1","yvel1","z","z2","xfunc","yfunc","newangle"],"mappings":";;;;;;AACA,SAASA,QAAT,CAAmBC,OAAnB,EAAwC;AAAA,MAAZC,IAAY,uEAAP,KAAO;;AACpC,WAASC,QAAT,CAAkBF,OAAlB,EAA2BG,IAA3B,EAAiCC,KAAjC,EAAwCC,WAAxC,EAAqDC,WAArD,EAAiF;AAAA,QAAfC,OAAe,uEAAP,KAAO;AAC7E,QAAMC,GAAG,GAAGR,OAAO,CAACS,IAApB;AACAN,IAAAA,IAAI,CAACO,QAAL,CAAc,GAAd;AACAP,IAAAA,IAAI,CAACQ,SAAL,CAAe,IAAf;AACAR,IAAAA,IAAI,CAACS,UAAL,CAAgB,IAAhB;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASf,OAAO,CAACgB,QAAR,GAAmBZ,KAA5B,IAAqCE,WAAnD;AACA,QAAMW,KAAK,GAAGC,GAAG,CAAClB,OAAO,CAACgB,QAAR,GAAmBZ,KAApB,CAAH,GAAgCE,WAA9C;AACAH,IAAAA,IAAI,CAACgB,YAAL,CAAkBX,GAAG,CAACY,QAAJ,CAAaC,CAAb,GAAiBhB,WAAjB,GAA+BQ,KAAjD;AACAV,IAAAA,IAAI,CAACmB,YAAL,CAAkBd,GAAG,CAACY,QAAJ,CAAaG,CAAb,GAAiBlB,WAAjB,GAA+BY,KAAjD;;AACA,QAAIV,OAAJ,EAAa;AACTJ,MAAAA,IAAI,CAACgB,YAAL,CAAkBhB,IAAI,CAACM,IAAL,CAAUW,QAAV,CAAmBC,CAAnB,GAAuB,CAAC,CAA1C;AACAlB,MAAAA,IAAI,CAACmB,YAAL,CAAkBnB,IAAI,CAACM,IAAL,CAAUW,QAAV,CAAmBG,CAAnB,GAAuB,CAAC,CAA1C;AACH;;AACDpB,IAAAA,IAAI,CAACqB,QAAL,CAAc,CAAC,CAAf;AACArB,IAAAA,IAAI,CAACsB,OAAL,GAAezB,OAAO,CAAC0B,OAAR,CAAgBC,GAA/B;AACH;;AAGD,MAAIC,KAAK,GAAGC,QAAZ;;AACA,MAAI7B,OAAO,CAAC0B,OAAR,CAAgBC,GAAhB,KAAwB,SAAxB,IAAqC3B,OAAO,CAAC0B,OAAR,CAAgBC,GAAhB,KAAwB,SAAjE,EAA4E;AACxEC,IAAAA,KAAK,GAAGE,SAAR;AACH;;AACD,MAAMtB,GAAG,GAAGR,OAAO,CAACS,IAApB;;AACA,MAAIT,OAAO,CAAC+B,MAAR,IAAkB/B,OAAO,CAACgC,OAA9B,EAAsC;AAClC,QAAI,CAAC/B,IAAL,EAAW;AACP,UAAIE,IAAI,GAAGyB,KAAK,CAACK,GAAN,CAAUzB,GAAG,CAAC0B,QAAJ,CAAab,CAAb,GAAiBrB,OAAO,CAACmC,KAAR,GAAc,CAAzC,EAA4C3B,GAAG,CAAC0B,QAAJ,CAAaX,CAAb,GAAiBvB,OAAO,CAACoC,MAAR,GAAe,CAA5E,CAAX;;AACA,UAAIjC,IAAJ,EAAU;AACND,QAAAA,QAAQ,CAACF,OAAD,EAAUG,IAAV,EAAiBkC,EAAE,GAAC,CAApB,EAAwB,GAAxB,EAA6B,GAA7B,CAAR;AACH;AACJ,KALD,MAKO;AACH,UAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,CAAb;;AACA,+BAAgBA,IAAhB,2BAAsB;AAAjB,YAAIC,GAAG,YAAP;;AACD,YAAIpC,KAAI,GAAGyB,KAAK,CAACK,GAAN,CAAUzB,GAAG,CAAC0B,QAAJ,CAAab,CAAb,GAAiBrB,OAAO,CAACmC,KAAR,GAAc,CAAzC,EAA4C3B,GAAG,CAAC0B,QAAJ,CAAaX,CAAb,GAAiBvB,OAAO,CAACoC,MAAR,GAAe,CAA5E,CAAX;;AACA,YAAIjC,KAAJ,EAAU;AACND,UAAAA,QAAQ,CAACF,OAAD,EAAUG,KAAV,EAAiB,CAACoC,GAAG,GAAG,GAAP,KAAeF,EAAE,GAAC,EAAlB,CAAjB,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,IAAnD,CAAR;AACH;AACJ;AACJ;AACJ;AACJ;;AAED,SAASG,QAAT,CAAkBpC,KAAlB,EAAyBqC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyD;AAAA,MAAhBC,UAAgB,uEAAL,GAAK;AACrD,MAAIC,GAAG,GAAGC,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBR,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,CAAV;AACAM,EAAAA,GAAG,GAAGH,KAAK,CAACC,KAAN,CAAYG,SAAZ,CAAsB/C,KAAK,GAAGyC,UAA9B,CAAN;AACAO,EAAAA,GAAG,GAAGL,KAAK,CAACC,KAAN,CAAYG,SAAZ,CAAsB/C,KAAK,GAAGyC,UAA9B,CAAN;AACAC,EAAAA,GAAG,GAAGC,KAAK,CAACC,KAAN,CAAYG,SAAZ,CAAsBL,GAAtB,CAAN;;AACA,MAAIM,GAAG,GAAGF,GAAN,GAAY,CAAhB,EAAmB;AACf,QAAIG,IAAI,GAAGH,GAAX;AACAA,IAAAA,GAAG,GAAGE,GAAN;AACAA,IAAAA,GAAG,GAAGF,GAAN;AACH;;AACD,MAAIA,GAAG,GAAGJ,GAAN,IAAaM,GAAG,GAAGN,GAAvB,EAA4B;AACxB,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;;AAED,SAASQ,aAAT,CAAuBC,IAAvB,EAA6BlC,CAA7B,EAAgCE,CAAhC,EAAmCiC,GAAnC,EAAuC;AACnC,MAAIC,MAAM,GAAGV,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBM,IAAI,CAACG,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAA1C,EAA6CkC,IAAI,CAACG,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAAnE,EAAsEF,CAAtE,EAAyEE,CAAzE,CAAb;AACA,MAAIoC,IAAI,GAAGZ,KAAK,CAACC,KAAN,CAAYY,QAAZ,CAAqBL,IAAI,CAACG,EAAL,CAAQ1C,QAA7B,EAAuCyC,MAAvC,EAA+CD,GAA/C,CAAX;AACAD,EAAAA,IAAI,CAACG,EAAL,CAAQG,WAAR,CAAoBF,IAAI,GAAGtB,EAAE,GAAC,CAA9B;AACAkB,EAAAA,IAAI,CAACG,EAAL,CAAQI,QAAR,CAAkB,MAAIzB,EAAL,IAAYsB,IAAI,GAAGtB,EAAE,GAAC,CAAtB,CAAjB;AACH;;AAED,SAAS0B,WAAT,CAAqBR,IAArB,EAA2BlC,CAA3B,EAA8BE,CAA9B,EAAiCiC,GAAjC,EAAsCJ,GAAtC,EAA2CY,MAA3C,EAAmD;AAC/CV,EAAAA,aAAa,CAACC,IAAD,EAAOlC,CAAP,EAAUE,CAAV,EAAayC,MAAb,CAAb;AACAT,EAAAA,IAAI,CAACU,IAAL,CAAUT,GAAV,EAAe,CAAf,EAAkBJ,GAAlB,EAAuB,KAAvB;AACH;;AAED,SAASc,GAAT,CAAa/D,IAAb,EAAmBF,IAAnB,EAAyBkE,EAAzB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgD;AAC5C;AACA,MAAIC,KAAK,GAAG,CAACC,IAAI,CAACC,GAAL,KAAa,KAAKC,UAAlB,GAA+B,KAAKC,SAArC,IAAgD,GAA5D,CAF4C,CAG5C;AACA;;AACA,OAAKC,MAAL,CAAY1D,GAAG,CAACqD,KAAK,GAAIlC,EAAE,GAAC,CAAb,CAAf;AACA,OAAK4B,IAAL,CAAU,EAAV,EAAc,CAAd,EAAiB,GAAjB,EAAsB,KAAtB;AACA,MAAIY,GAAG,GAAGC,KAAV;;AACA,MAAIC,QAAJ,EAAc;AACVF,IAAAA,GAAG,GAAG,CAACG,QAAD,CAAN;AACH;;AAV2C;AAAA;AAAA;;AAAA;AAW5C,yBAAWH,GAAX,8HAAgB;AAAXI,MAAAA,EAAW;;AACZ,UAAIA,EAAE,CAACvB,EAAH,CAAM3B,MAAN,IAAgBkD,EAAE,CAACvB,EAAH,CAAM1B,OAA1B,EAAmC;AAC/B,YAAIQ,QAAQ,CAAC,KAAKkB,EAAL,CAAQ1C,QAAR,GAAoBqB,EAAE,GAAC,CAAxB,EAA4B,KAAKqB,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAAlD,EAAqD,KAAKqC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAA3E,EAA8E0D,EAAE,CAACvB,EAAH,CAAMjD,IAAN,CAAWyB,QAAX,CAAoBb,CAAlG,EAAqG4D,EAAE,CAACvB,EAAH,CAAMjD,IAAN,CAAWyB,QAAX,CAAoBX,CAAzH,EAA4H,GAA5H,CAAZ,EAA8I;AAC1I,cAAIwB,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,KAAjB,IAA0B,GAA9B,EAAmC;AAC/B,iBAAKiC,KAAL,CAAW,KAAX;AACH;AACJ;AACJ;AACJ;AAnB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoB/C;;AAED,SAASC,GAAT,CAAahF,IAAb,EAAmBF,IAAnB,EAAyBkE,EAAzB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgD;AAC5C,MAAI,KAAKc,UAAL,KAAoBC,SAApB,IAAiC,KAAKD,UAAL,CAAgB1B,EAAhB,CAAmB3B,MAAnB,KAA8B,KAAnE,EAA0E;AACtE,SAAKqD,UAAL,GAAkBN,KAAK,CAAChE,IAAI,CAACwE,KAAL,CAAWxE,IAAI,CAACyE,MAAL,CAAY,CAAZ,CAAX,CAAD,CAAvB;;AACA,QAAI,KAAKH,UAAL,KAAoBC,SAAxB,EAAmC;AAC/B,WAAKD,UAAL,GAAkB;AAAC,cAAM;AAAC,oBAAU;AAAX;AAAP,OAAlB;AACH;;AACD;AACH;;AACD,MAAII,KAAK,GAAG,KAAKJ,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAjC,GAAqC,KAAKqC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAAvE;AACA,MAAIoE,KAAK,GAAG,KAAKL,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCX,CAAjC,GAAqC,KAAKmC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAAvE;AACA,MAAImE,IAAI,GAAG5E,IAAI,CAAC6E,IAAL,CAAU7E,IAAI,CAAC8E,GAAL,CAASJ,KAAT,EAAgB,CAAhB,IAAqB1E,IAAI,CAAC8E,GAAL,CAASH,KAAT,EAAgB,CAAhB,CAA/B,CAAX;AAGAnC,EAAAA,aAAa,CAAC,IAAD,EAAO,KAAK8B,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAxC,EAA2C,KAAK+D,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCX,CAA5E,EAA+E,EAA/E,CAAb;;AACA,MAAImE,IAAI,GAAG,GAAX,EAAgB;AACZ3B,IAAAA,WAAW,CAAC,IAAD,EAAO,KAAKqB,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAxC,EAA2C,KAAK+D,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCX,CAA5E,EAA+E,CAA/E,EAAkF,GAAlF,EAAuF,EAAvF,CAAX;;AACA,QAAIwB,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,IAAjB,IAAyB,IAA7B,EAAmC;AAC/B,WAAKiC,KAAL,CAAW,KAAX;AACH;AACJ,GALD,MAKO,IAAIQ,IAAI,GAAG,EAAX,EAAe;AAClB,SAAKzB,IAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,IAArB;AACH;AACJ;;AACD,SAAS4B,GAAT,CAAa1F,IAAb,EAAmBF,IAAnB,EAAyBkE,EAAzB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgD;AAC5C,MAAI,KAAKZ,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAAtB,KAA4B,KAAKyE,GAAjC,IAAwC,KAAKpC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAAtB,KAA4B,KAAKwE,GAA7E,EAAkF;AAC9E,SAAKD,GAAL,GAAW/C,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAX;AACA,SAAK8C,GAAL,GAAWhD,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAX;AACH;;AACDc,EAAAA,WAAW,CAAC,IAAD,EAAO,KAAK+B,GAAZ,EAAiB,KAAKC,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,EAAnC,CAAX;AACH;;AACD,SAASC,GAAT,CAAa7F,IAAb,EAAmBF,IAAnB,EAAyBkE,EAAzB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgD;AAC5C,MAAIkB,KAAK,GAAG,KAAKJ,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAjC,GAAqC,KAAKqC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAAvE;AACA,MAAIoE,KAAK,GAAG,KAAKL,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCX,CAAjC,GAAqC,KAAKmC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAAvE;AACA,MAAImE,IAAI,GAAG5E,IAAI,CAAC6E,IAAL,CAAU7E,IAAI,CAAC8E,GAAL,CAASJ,KAAT,EAAgB,CAAhB,IAAqB1E,IAAI,CAAC8E,GAAL,CAASH,KAAT,EAAgB,CAAhB,CAA/B,CAAX;AACA,MAAIQ,GAAG,GAAGC,SAAS,CAAC,KAAKxC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAAvB,EAA0B,KAAKqC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAAhD,CAAnB;;AAEA,MAAI,KAAK6D,UAAL,CAAgB1B,EAAhB,CAAmB3B,MAAnB,KAA8B,KAAlC,EAAyC;AACrC,SAAKqD,UAAL,GAAkBN,KAAK,CAAChE,IAAI,CAACwE,KAAL,CAAWxE,IAAI,CAACyE,MAAL,CAAY,CAAZ,CAAX,CAAD,CAAvB;AACA;AACH;;AACD,MAAI,CAACG,IAAI,GAAG,GAAP,IAAeO,GAAhB,KAAwB,KAAKH,GAAL,IAAY,IAApC,IAA4C,KAAKC,GAAL,IAAY,IAA5D,EAAkE;AAC9D,SAAKD,GAAL,GAAW/C,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAX;AACA,SAAK8C,GAAL,GAAWhD,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAX;AACH;;AACD,MAAIyC,IAAI,GAAG,GAAP,IAAcO,GAAlB,EAAuB;AACnB,QAAIE,KAAK,GAAG,KAAKzC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAAlC;AACA,QAAI+E,KAAK,GAAG,KAAK1C,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAAlC;;AACA,QAAIiE,MAAK,GAAG1E,IAAI,CAACuF,GAAL,CAASF,KAAK,GAAG,KAAKL,GAAtB,CAAZ;;AACA,QAAIL,MAAK,GAAG3E,IAAI,CAACuF,GAAL,CAASD,KAAK,GAAG,KAAKL,GAAtB,CAAZ;;AACA,QAAIP,MAAK,GAAG,EAAR,IAAcC,MAAK,GAAG,EAA1B,EAA8B;AAC1B,WAAKK,GAAL,GAAW/C,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAX;AACA,WAAK8C,GAAL,GAAWhD,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAX;AACH;;AACDc,IAAAA,WAAW,CAAC,IAAD,EAAO,KAAK+B,GAAZ,EAAiB,KAAKC,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC,EAApC,CAAX;AACH,GAVD,MAUK;AACD,SAAKD,GAAL,GAAW,IAAX;AACA,SAAKC,GAAL,GAAW,IAAX;AACAzC,IAAAA,aAAa,CAAC,IAAD,EAAO,KAAK8B,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAxC,EAA2C,KAAK+D,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCX,CAA5E,EAA+E,EAA/E,CAAb;AACA,SAAK0C,IAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB;;AACA,QAAIlB,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,IAAjB,IAAyB,IAA7B,EAAmC;AAC/B,WAAKiC,KAAL,CAAW,KAAX;AACH;AACJ;AACJ;;AAED,SAASoB,GAAT,CAAanG,IAAb,EAAmBF,IAAnB,EAAyBkE,EAAzB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgD;AAC5C,MAAI,KAAKc,UAAL,CAAgB1B,EAAhB,CAAmB3B,MAAnB,KAA8B,KAAlC,EAAyC;AACrC,SAAKqD,UAAL,GAAkBN,KAAK,CAAChE,IAAI,CAACwE,KAAL,CAAWxE,IAAI,CAACyE,MAAL,CAAY,CAAZ,CAAX,CAAD,CAAvB;AACA;AACH;;AAED,MAAI,KAAKO,GAAL,IAAY,KAAKC,GAArB,EAA0B;AACtBhC,IAAAA,WAAW,CAAC,IAAD,EAAO,KAAK+B,GAAZ,EAAiB,KAAKC,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC,EAApC,CAAX;AACH;;AACD,MAAII,KAAK,GAAG,KAAKzC,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBb,CAAlC;AACA,MAAI+E,KAAK,GAAG,KAAK1C,EAAL,CAAQjD,IAAR,CAAayB,QAAb,CAAsBX,CAAlC;AACA,MAAIiE,KAAK,GAAG1E,IAAI,CAACuF,GAAL,CAASF,KAAK,GAAG,KAAKL,GAAtB,CAAZ;AACA,MAAIL,KAAK,GAAG3E,IAAI,CAACuF,GAAL,CAASD,KAAK,GAAG,KAAKL,GAAtB,CAAZ;;AACA,MAAIP,KAAK,GAAG,EAAR,IAAcC,KAAK,GAAG,EAA1B,EAA8B;AAC1B,SAAKK,GAAL,GAAW,KAAX;AACA,SAAKC,GAAL,GAAW,KAAX;AACH;;AACDP,EAAAA,KAAK,GAAG1E,IAAI,CAACuF,GAAL,CAASF,KAAK,GAAG,KAAKf,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAlD,CAAR;AACAoE,EAAAA,KAAK,GAAG3E,IAAI,CAACuF,GAAL,CAASD,KAAK,GAAG,KAAKhB,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCX,CAAlD,CAAR;;AACA,MAAIiE,KAAK,GAAI,GAAT,IAAgBC,KAAK,GAAG,GAA5B,EAAiC;AAC7B,QAAID,OAAK,GAAGzC,KAAK,CAACE,OAAN,CAAc,CAAC,GAAf,EAAoB,CAAC,EAArB,CAAZ;;AACA,QAAI,KAAKmC,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAjC,GAAqC,KAAKyE,GAA1C,GAAgD,CAApD,EAAuD;AACnDN,MAAAA,OAAK,GAAGzC,KAAK,CAACE,OAAN,CAAc,EAAd,EAAkB,GAAlB,CAAR;AACH;;AACD,SAAK6C,GAAL,GAAW,KAAKV,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCb,CAAjC,GAAqCmE,OAAhD;AACA,SAAKO,GAAL,GAAW,KAAKX,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwByB,QAAxB,CAAiCX,CAA5C;AACH;;AACD,MAAI,CAAC,KAAKuE,GAAN,IAAa,CAAC,KAAKC,GAAvB,EAA4B;AACxBzC,IAAAA,aAAa,CAAC,IAAD,EAAO,KAAK8B,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwBY,CAA/B,EAAkC,KAAK+D,UAAL,CAAgB1B,EAAhB,CAAmBjD,IAAnB,CAAwBc,CAA1D,EAA6D,EAA7D,CAAb;AACA,SAAK0C,IAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,IAArB;AACA,SAAKsC,KAAL,GAAa,KAAKA,KAAL,IAAc,EAA3B;;AACA,QAAI,KAAKA,KAAL,GAAa,EAAjB,EAAqB;AACjB,WAAKrB,KAAL,CAAW,KAAX;AACA,WAAKqB,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AACH;;AACD,QAAIxD,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,MAAjB,IAA2B,GAA/B,EAAoC;AAChC,WAAKsD,KAAL,GAAa,CAAb;AACH;AACJ;AACJ;;IAEKC;AACF,gBAAYC,MAAZ,EAAoBpF,CAApB,EAAuBE,CAAvB,EAA0BmF,KAA1B,EAAiCC,GAAjC,EAAsC;AAAA;;AAClC,SAAKjD,EAAL,GAAU+C,MAAV;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKE,OAAL,GAAe,GAAf;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKjC,MAAL,CAAY+B,GAAZ;AACH;;;;2BAEMG,MAAM7G,MAAqD;AAAA,UAA/CkE,EAA+C,uEAA5C,KAA4C;AAAA,UAArCC,IAAqC,uEAAhC,KAAgC;AAAA,UAAzBC,KAAyB,uEAAnB,KAAmB;AAAA,UAAZC,IAAY,uEAAP,KAAO;AAE9D,UAAMyC,GAAG,GAAG,EAAZ;AACA,UAAMC,GAAG,GAAG,CAAZ;;AAEA,UAAI5C,IAAJ,EAAU;AACN,aAAKH,IAAL,CAAU8C,GAAV,EAAeC,GAAf,EAAoB,KAAKJ,OAAzB,EAAkC,IAAlC;AACH,OAFD,MAEO,IAAIzC,EAAJ,EAAQ;AACX,aAAKF,IAAL,CAAU8C,GAAV,EAAeC,GAAf,EAAoB,KAAKJ,OAAzB,EAAkC,KAAlC;AACH;;AAED,UAAItC,IAAJ,EAAU;AACN,aAAKM,MAAL,CAAY,CAAC,CAAb;AACH,OAFD,MAEO,IAAIP,KAAJ,EAAW;AACd,aAAKO,MAAL,CAAY,CAAZ;AACH;;AAGD,UAAIkC,IAAI,IAAI7G,IAAZ,EAAkB;AACd,aAAKiF,KAAL,CAAWjF,IAAX;AACH;AACJ;;;2BAEsD;AAAA,UAAjD8G,GAAiD,uEAA7C,EAA6C;AAAA,UAAzCC,GAAyC,uEAArC,CAAqC;AAAA,UAAlCC,OAAkC,uEAA1B,KAAKL,OAAqB;AAAA,UAAZM,IAAY,uEAAP,KAAO;AACnD;AACA,UAAMC,GAAG,GAAG,KAAKzD,EAAL,CAAQ1C,QAApB;AACA,UAAMoG,IAAI,GAAGtG,IAAI,CAACC,GAAL,CAASoG,GAAG,GAAIrG,IAAI,CAACuG,EAAL,GAAQ,CAAxB,IAA8BN,GAA3C;AACA,UAAMO,IAAI,GAAGxG,IAAI,CAACI,GAAL,CAASiG,GAAG,GAAIrG,IAAI,CAACuG,EAAL,GAAQ,CAAxB,IAA8BN,GAA3C;AAEA,UAAMQ,KAAK,GAAGzG,IAAI,CAACC,GAAL,CAASoG,GAAG,GAAIrG,IAAI,CAACuG,EAAL,GAAQ,CAAxB,IAA8BJ,OAA5C;AACA,UAAMO,KAAK,GAAG1G,IAAI,CAACI,GAAL,CAASiG,GAAG,GAAIrG,IAAI,CAACuG,EAAL,GAAQ,CAAxB,IAA8BJ,OAA5C;;AAEA,UAAIC,IAAJ,EAAU;AACN,aAAKO,KAAL,CAAWL,IAAX,EAAiBE,IAAjB,EAAuBL,OAAvB;AACH,OAFD,MAEO;AACH,aAAKQ,KAAL,CAAW,CAACL,IAAZ,EAAkB,CAACE,IAAnB,EAAyBL,OAAzB;AACH;;AAED,WAAKS,KAAL,CAAWV,GAAX;AACH;;;0BAEK3F,GAAGE,GAAG6B,KAAK;AACb,UAAIvC,KAAK,GAAG,KAAK6C,EAAL,CAAQjD,IAAR,CAAaW,QAAb,CAAsBC,CAAtB,GAA0BA,CAA1B,GAA8B,QAA1C;AACA,UAAIJ,KAAK,GAAG,KAAKyC,EAAL,CAAQjD,IAAR,CAAaW,QAAb,CAAsBG,CAAtB,GAA0BA,CAA1B,GAA8B,QAA1C;AAEA,UAAIgG,KAAK,GAAI1G,KAAK,GAAGuC,GAAT,GAAgBtC,IAAI,CAAC6E,IAAL,CAAU7E,IAAI,CAAC8E,GAAL,CAAS/E,KAAT,EAAgB,CAAhB,IAAqBC,IAAI,CAAC8E,GAAL,CAAS3E,KAAT,EAAgB,CAAhB,CAA/B,CAA5B;AACA,UAAIuG,KAAK,GAAIvG,KAAK,GAAGmC,GAAT,GAAgBtC,IAAI,CAAC6E,IAAL,CAAU7E,IAAI,CAAC8E,GAAL,CAAS/E,KAAT,EAAgB,CAAhB,IAAqBC,IAAI,CAAC8E,GAAL,CAAS3E,KAAT,EAAgB,CAAhB,CAA/B,CAA5B;;AAEA,UAAIH,IAAI,CAACuF,GAAL,CAASkB,KAAT,IAAkBzG,IAAI,CAACuF,GAAL,CAASxF,KAAT,CAAtB,EAAuC;AACnCA,QAAAA,KAAK,GAAG0G,KAAR;AACH;;AACD,UAAIzG,IAAI,CAACuF,GAAL,CAASmB,KAAT,IAAkB1G,IAAI,CAACuF,GAAL,CAASpF,KAAT,CAAtB,EAAuC;AACnCA,QAAAA,KAAK,GAAGuG,KAAR;AACH;;AAED,WAAK9D,EAAL,CAAQvC,YAAR,CAAqBN,KAArB;AACA,WAAK6C,EAAL,CAAQpC,YAAR,CAAqBL,KAArB;AACH;;;0BAEKuC,KAAK;AACP,UAAImE,IAAI,GAAG,KAAKjE,EAAL,CAAQjD,IAAR,CAAaW,QAAb,CAAsBC,CAAjC;AACA,UAAIuG,IAAI,GAAG,KAAKlE,EAAL,CAAQjD,IAAR,CAAaW,QAAb,CAAsBG,CAAjC;AACA,UAAMsG,KAAK,GAAG/G,IAAI,CAACuF,GAAL,CAASsB,IAAT,IAAiB,OAA/B;AACA,UAAMG,KAAK,GAAGhH,IAAI,CAACuF,GAAL,CAASuB,IAAT,IAAiB,OAA/B;AAEA,UAAMG,CAAC,GAAGjH,IAAI,CAAC6E,IAAL,CAAU7E,IAAI,CAAC8E,GAAL,CAASiC,KAAT,EAAgB,CAAhB,IAAqB/G,IAAI,CAAC8E,GAAL,CAASkC,KAAT,EAAgB,CAAhB,CAA/B,CAAV;AACA,UAAME,EAAE,GAAGlH,IAAI,CAACsC,GAAL,CAAS2E,CAAC,GAAGvE,GAAb,EAAkB,CAAlB,CAAX;AAEA,UAAMb,EAAE,GAAIqF,EAAE,GAAGL,IAAN,GAAcI,CAAzB;AACA,UAAMnF,EAAE,GAAIoF,EAAE,GAAGJ,IAAN,GAAcG,CAAzB;AAEA,UAAIE,KAAK,GAAGnH,IAAI,CAACsC,GAAjB;AACA,UAAI8E,KAAK,GAAGpH,IAAI,CAACsC,GAAjB;;AAEA,UAAIuE,IAAI,GAAG,CAAX,EAAc;AACVM,QAAAA,KAAK,GAAGnH,IAAI,CAACoC,GAAb;AACH;;AACD,UAAI0E,IAAI,GAAG,CAAX,EAAc;AACVM,QAAAA,KAAK,GAAGpH,IAAI,CAACoC,GAAb;AACH;;AAEDyE,MAAAA,IAAI,GAAGM,KAAK,CAACtF,EAAD,EAAK,CAAL,CAAZ;AACAiF,MAAAA,IAAI,GAAGM,KAAK,CAACtF,EAAD,EAAK,CAAL,CAAZ;AAEA,WAAKc,EAAL,CAAQvC,YAAR,CAAqBwG,IAArB;AACA,WAAKjE,EAAL,CAAQpC,YAAR,CAAqBsG,IAArB;AACH;;;2BAEMxH,OAAO;AACV,UAAI+H,QAAQ,GAAG,KAAKzE,EAAL,CAAQtD,KAAR,GAAgBA,KAA/B;;AAEA,UAAI+H,QAAQ,GAAG,GAAf,EAAoB;AAChBA,QAAAA,QAAQ,GAAGA,QAAQ,GAAG,GAAtB;AACH;;AAED,UAAIA,QAAQ,GAAG,CAAC,GAAhB,EAAqB;AACjBA,QAAAA,QAAQ,GAAGA,QAAQ,GAAG,GAAtB;AACH;;AACD,WAAKzE,EAAL,CAAQI,QAAR,CAAiBqE,QAAjB;AACAA,MAAAA,QAAQ,GAAIA,QAAQ,GAAC,GAAV,GAAiBrH,IAAI,CAACuG,EAAjC,CAXU,CAW0B;;AACpC,WAAK3D,EAAL,CAAQG,WAAR,CAAoBsE,QAApB;AAEH;;;0BAGKzB,QAAO,CAEZ;;;4BAEiB;AAAA,UAAZzG,IAAY,uEAAP,KAAO;;AACd,UAAI,CAACA,IAAL,EAAW;AACPF,QAAAA,QAAQ,CAAC,KAAK2D,EAAN,CAAR;AACH,OAFD,MAEO;AACH3D,QAAAA,QAAQ,CAAC,KAAK2D,EAAN,EAAUzD,IAAV,CAAR;AACH;AACJ","file":"ship.b7ea6d19.js","sourceRoot":"../src","sourcesContent":["\nfunction makeShot (shipobj, spec=false) {\n    function shootOne(shipobj, shot, angle, speed_scale, extra_speed, invertY=false) {\n        const bod = shipobj.body;\n        shot.setScale(0.7);\n        shot.setActive(true);\n        shot.setVisible(true);\n        const x_vel = Math.cos(shipobj.rotation + angle) * extra_speed;\n        const y_vel = sin(shipobj.rotation + angle) * extra_speed;\n        shot.setVelocityX(bod.velocity.x * speed_scale - x_vel);\n        shot.setVelocityY(bod.velocity.y * speed_scale - y_vel);\n        if (invertY) {\n            shot.setVelocityX(shot.body.velocity.x * -1);\n            shot.setVelocityY(shot.body.velocity.y * -1);\n        }\n        shot.setDepth(-1);\n        shot.shooter = shipobj.texture.key;\n    }\n\n\n    let shots = badshots\n    if (shipobj.texture.key === 'player1' || shipobj.texture.key === 'player2') {\n        shots = goodshots\n    }\n    const bod = shipobj.body;\n    if (shipobj.active && shipobj.visible){\n        if (!spec) {\n            let shot = shots.get(bod.position.x + shipobj.width/2, bod.position.y + shipobj.height/2);\n            if (shot) {\n                shootOne(shipobj, shot, (pi/2), 0.3, 600);\n            }\n        } else {\n            const vals = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n            for (let val of vals) {\n                let shot = shots.get(bod.position.x + shipobj.width/2, bod.position.y + shipobj.height/2);\n                if (shot) {\n                    shootOne(shipobj, shot, ((val - 0.5) * (pi/16)), 0.1, 100, true);\n                }\n            }\n        }\n    }\n}\n\nfunction pointsTo(angle, x1, y1, x2, y2, inaccuracy=0.5) {\n    let dir = pmath.Angle.Between(x1, y1, x2, y2);\n    min = pmath.Angle.Normalize(angle - inaccuracy);\n    max = pmath.Angle.Normalize(angle + inaccuracy);\n    dir = pmath.Angle.Normalize(dir);\n    if (max - min < 0) {\n        let temp = min;\n        min = max;\n        max = min;\n    }\n    if (min < dir && max > dir) {\n        return true;\n    }\n    return false;\n}\n\nfunction rotateToPoint(ship, x, y, amt){\n    let target = pmath.Angle.Between(ship.ph.body.position.x, ship.ph.body.position.y, x, y);\n    let next = pmath.Angle.RotateTo(ship.ph.rotation, target, amt);\n    ship.ph.setRotation(next + pi/2);\n    ship.ph.setAngle((180/pi) * (next + pi/2));\n}\n\nfunction moveToPoint(ship, x, y, amt, max, rotamt) {\n    rotateToPoint(ship, x, y, rotamt);\n    ship.move(amt, 0, max, false);\n}\n\nfunction ai1(shot, spec, up, down, right, left) {\n    //lazy binding allows 'this' to refer to the enemy ships when used as their update method.\n    let phase = (Date.now() - this.createTime + this.nonceTime)/500;\n    //this.ph.setVelocityY(200);\n    //this.ph.setVelocityX(Math.cos(phase) * 200);\n    this.rotate(sin(phase - (pi/4)));\n    this.move(10, 3, 200, false);\n    let shs = ships;\n    if (demoMode) {\n        shs = [demoShip];\n    }\n    for (sh of shs) {\n        if (sh.ph.active && sh.ph.visible) {\n            if (pointsTo(this.ph.rotation - (pi/2), this.ph.body.position.x, this.ph.body.position.y, sh.ph.body.position.x, sh.ph.body.position.y, 0.1)) {\n                if (pmath.Between(0, 20000) < 300) {\n                    this.shoot(false);\n                }\n            }\n        }\n    }\n}\n\nfunction ai2(shot, spec, up, down, right, left) {\n    if (this.targetShip === undefined || this.targetShip.ph.active === false) {\n        this.targetShip = ships[Math.floor(Math.random(2))];\n        if (this.targetShip === undefined) {\n            this.targetShip = {\"ph\": {\"active\": false}};\n        }\n        return\n    }\n    let xdist = this.targetShip.ph.body.position.x - this.ph.body.position.x;\n    let ydist = this.targetShip.ph.body.position.y - this.ph.body.position.y;\n    let dist = Math.sqrt(Math.pow(xdist, 2) + Math.pow(ydist, 2));\n\n\n    rotateToPoint(this, this.targetShip.ph.body.position.x, this.targetShip.ph.body.position.y, 60);\n    if (dist > 100) {\n        moveToPoint(this, this.targetShip.ph.body.position.x, this.targetShip.ph.body.position.y, 2, 120, 60);\n        if (pmath.Between(0, 6000) > 5990) {\n            this.shoot(false);\n        }\n    } else if (dist < 80) {\n        this.move(5, 0, 100, true);\n    }\n}\nfunction ai3(shot, spec, up, down, right, left) {\n    if (this.ph.body.position.x === this.ptx && this.ph.body.position.y === this.pty) {\n        this.ptx = pmath.Between(100, 700);\n        this.pty = pmath.Between(100, 500);\n    }\n    moveToPoint(this, this.ptx, this.pty, 5, 400, 10);\n}\nfunction ai4(shot, spec, up, down, right, left) {\n    let xdist = this.targetShip.ph.body.position.x - this.ph.body.position.x;\n    let ydist = this.targetShip.ph.body.position.y - this.ph.body.position.y;\n    let dist = Math.sqrt(Math.pow(xdist, 2) + Math.pow(ydist, 2));\n    let off = offscreen(this.ph.body.position.x, this.ph.body.position.y);\n\n    if (this.targetShip.ph.active === false) {\n        this.targetShip = ships[Math.floor(Math.random(2))];\n        return\n    }\n    if ((dist < 300  || off) && this.ptx == null && this.pty == null) {\n        this.ptx = pmath.Between(100, 700);\n        this.pty = pmath.Between(100, 500);\n    }\n    if (dist < 300 || off) {\n        let thisx = this.ph.body.position.x;\n        let thisy = this.ph.body.position.y;\n        let xdist = Math.abs(thisx - this.ptx);\n        let ydist = Math.abs(thisy - this.pty);\n        if (xdist < 30 && ydist < 30) {\n            this.ptx = pmath.Between(100, 700);\n            this.pty = pmath.Between(100, 500);\n        }\n        moveToPoint(this, this.ptx, this.pty, 20, 300, 10);\n    }else{\n        this.ptx = null;\n        this.pty = null;\n        rotateToPoint(this, this.targetShip.ph.body.position.x, this.targetShip.ph.body.position.y, 10);\n        this.move(3, 2, 20, false);\n        if (pmath.Between(0, 6000) > 5990) {\n            this.shoot(false);\n        }\n    }\n}\n\nfunction ai5(shot, spec, up, down, right, left) {\n    if (this.targetShip.ph.active === false) {\n        this.targetShip = ships[Math.floor(Math.random(2))];\n        return\n    }\n\n    if (this.ptx && this.pty) {\n        moveToPoint(this, this.ptx, this.pty, 10, 400, 10);\n    }\n    let thisx = this.ph.body.position.x;\n    let thisy = this.ph.body.position.y;\n    let xdist = Math.abs(thisx - this.ptx);\n    let ydist = Math.abs(thisy - this.pty);\n    if (xdist < 30 && ydist < 30) {\n        this.ptx = false;\n        this.pty = false;\n    }\n    xdist = Math.abs(thisx - this.targetShip.ph.body.position.x);\n    ydist = Math.abs(thisy - this.targetShip.ph.body.position.y);\n    if (xdist >  300 && ydist > 300) {\n        let xdist = pmath.Between(-100, -50);\n        if (this.targetShip.ph.body.position.x - this.ptx < 0) {\n            xdist = pmath.Between(50, 100);\n        }\n        this.ptx = this.targetShip.ph.body.position.x + xdist;\n        this.pty = this.targetShip.ph.body.position.y;\n    }\n    if (!this.ptx || !this.pty) {\n        rotateToPoint(this, this.targetShip.ph.body.x, this.targetShip.ph.body.y, 10);\n        this.move(3, 0, 200, true);\n        this.burst = this.burst || 10;\n        if (this.burst < 10) {\n            this.shoot(false);\n            this.burst = this.burst + 1;\n        }\n        if (pmath.Between(0, 100000) < 300) {\n            this.burst = 1;\n        }\n    }\n}\n\nclass Ship { \n    constructor(phship, x, y, scale, rot) {\n        this.ph = phship;\n        this.scale = scale;\n        this.vel_max = 500;\n        this.shotspeed = 1000;\n        this.rotate(rot);\n    }\n\n    update(fire, spec, up=false, down=false, right=false, left=false) {\n\n        const acc = 10\n        const dec = 3\n\n        if (down) {\n            this.move(acc, dec, this.vel_max, true);\n        } else if (up) {\n            this.move(acc, dec, this.vel_max, false);\n        }\n\n        if (left) {\n            this.rotate(-5);\n        } else if (right) {\n            this.rotate(5);\n        }\n\n\n        if (fire || spec) {\n            this.shoot(spec);\n        }\n    }\n\n    move (acc=10, dec=3, max_vel=this.vel_max, back=false) {\n        // move forward or backwards (and decelerate)\n        const ang = this.ph.rotation;\n        const xacc = Math.cos(ang + (Math.PI/2)) * acc\n        const yacc = Math.sin(ang + (Math.PI/2)) * acc\n\n        const x_max = Math.cos(ang + (Math.PI/2)) * max_vel;\n        const y_max = Math.sin(ang + (Math.PI/2)) * max_vel;\n\n        if (back) {\n            this.accel(xacc, yacc, max_vel);\n        } else {\n            this.accel(-xacc, -yacc, max_vel);\n        }\n\n        this.decel(dec);\n    }\n\n    accel(x, y, max) {\n        let x_vel = this.ph.body.velocity.x + x + 0.000001;\n        let y_vel = this.ph.body.velocity.y + y + 0.000001;\n\n        let x_max = (x_vel * max) / Math.sqrt(Math.pow(x_vel, 2) + Math.pow(y_vel, 2))\n        let y_max = (y_vel * max) / Math.sqrt(Math.pow(x_vel, 2) + Math.pow(y_vel, 2))\n\n        if (Math.abs(x_max) < Math.abs(x_vel)) {\n            x_vel = x_max;\n        }\n        if (Math.abs(y_max) < Math.abs(y_vel)) {\n            y_vel = y_max;\n        }\n\n        this.ph.setVelocityX(x_vel);\n        this.ph.setVelocityY(y_vel);\n    }\n\n    decel(amt) {\n        let xvel = this.ph.body.velocity.x;\n        let yvel = this.ph.body.velocity.y;\n        const xvel1 = Math.abs(xvel) + 0.00001;\n        const yvel1 = Math.abs(yvel) + 0.00001;\n\n        const z = Math.sqrt(Math.pow(xvel1, 2) + Math.pow(yvel1, 2));\n        const z2 = Math.max(z - amt, 0);\n\n        const x2 = (z2 * xvel) / z;\n        const y2 = (z2 * yvel) / z;\n\n        let xfunc = Math.max;\n        let yfunc = Math.max;\n\n        if (xvel < 0) {\n            xfunc = Math.min;\n        }\n        if (yvel < 0) {\n            yfunc = Math.min;\n        }\n\n        xvel = xfunc(x2, 0);\n        yvel = yfunc(y2, 0);\n\n        this.ph.setVelocityX(xvel);\n        this.ph.setVelocityY(yvel);\n    }\n\n    rotate(angle) {\n        let newangle = this.ph.angle + angle;\n\n        if (newangle > 180) {\n            newangle = newangle - 360;\n        }\n\n        if (newangle < -180) {\n            newangle = newangle + 360;\n        }\n        this.ph.setAngle(newangle);\n        newangle = (newangle/180) * Math.PI //radian conversion\n        this.ph.setRotation(newangle);\n\n    }\n\n\n    scale(scale) {\n\n    }\n\n    shoot(spec=false) {\n        if (!spec) {\n            makeShot(this.ph);\n        } else {\n            makeShot(this.ph, spec);\n        }\n    }\n}\n"]}