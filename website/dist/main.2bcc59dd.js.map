{"version":3,"sources":["../../game/static/scripts/main.js"],"names":["p1scoreText","p2scoreText","enemies1","enemies2","enemies3","enemies4","enemies5","blasts","cursors","sky","dirt1","goodshots","badshots","textbox","p1score","p2score","ships","enemies","spaceheld","shiftpressed","two_player","zeroheld","enterpressed","normal_mode","enemy1_mode","enemy2_mode","enemy3_mode","enemy4_mode","enemy5_mode","boss_mode","sin","Math","cos","pi","PI","pmath","Phaser","offscreen","x","y","spawnEnemy1","ship","get","setBounce","setAngle","setRotation","undefined","casing","enemy","Ship","update","ai1","setActive","setVisible","createTime","Date","now","nonceTime","Between","spawnEnemy2","ai2","targetShip","floor","random","spawnEnemy3","ai3","ptx","pty","spawnEnemy4","ai4","spawnEnemy5","ai5","MainScene","Scene","shot","active","blast","body","position","play","setTimeout","setPosition","setVelocity","texture","key","shooter","setText","toString","load","plugin","image","atlas","text","add","tileSprite","setDepth","fontSize","fill","make","padding","left","right","top","bottom","style","fontFamily","color","align","wordWrap","width","useAdvancedWrap","fixedWidth","fixedHeight","plugins","physics","sprite","setCollideWorldBounds","push","ph","anims","create","frames","group","defaultKey","maxSize","collider","bulletHit","time","addEvent","delay","callback","callbackScope","loop","start","stop","tilePositionY","kb","input","keyboard","four","addKey","Input","Keyboard","KeyCodes","NUMPAD_FOUR","isDown","six","NUMPAD_SIX","eight","NUMPAD_EIGHT","five","NUMPAD_FIVE","fire","NUMPAD_ZERO","spec","ENTER","w","a","s","d","SPACE","SHIFT","children","each","bind","config","type","AUTO","height","default","arcade","gravity","debug","global","scene","TitleScene","game","Game"],"mappings":"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","file":"main.2bcc59dd.js","sourceRoot":"../src","sourcesContent":["var p1score = 0;\nvar p1scoreText;\nvar p2score = 0;\nvar p2scoreText;\n\nvar ships = [];\nvar enemies = [];\nvar enemies1;\nvar enemies2;\nvar enemies3;\nvar enemies4;\nvar enemies5;\nvar blasts;\nvar cursors;\nvar sky;\nvar dirt1;\n\nvar spaceheld = false;\nvar shiftpressed = 0;\n\nvar two_player = false;\nvar zeroheld = false;\nvar enterpressed = 0;\n\nvar goodshots;\nvar badshots;\n\nvar textbox;\n\nvar normal_mode = false;\nvar enemy1_mode = false;\nvar enemy2_mode = false;\nvar enemy3_mode = false;\nvar enemy4_mode = false;\nvar enemy5_mode = false;\nvar boss_mode = false;\n\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar pi = Math.PI;\nvar pmath = Phaser.Math;\n\nfunction offscreen(x, y) {\n    if (x < -200 || y < -200 || x > 1000 || y > 800) {\n        return true;\n    }\n    return false;\n}\n\nfunction spawnEnemy1(x, y) {\n    if (enemy1_mode) {\n        let ship = enemies1.get(x, y);\n        ship.setBounce(0.6);\n        ship.setAngle(180)\n        ship.setRotation(pi)\n        if (ship.casing === undefined) { //if full ship objectnot created already\n            let enemy = new Ship(ship, x, y, 1, 0);\n            enemy.update = ai1;\n            ship.casing = enemy; //just to keep track of having been created already\n        }\n        ship.setActive(true);\n        ship.setVisible(true);\n        ship.casing.createTime = Date.now();\n        ship.casing.nonceTime = pmath.Between(0, 6000);\n    }\n}\n\nfunction spawnEnemy2(x, y) {\n    if (enemy2_mode) {\n        let ship = enemies2.get(x, y);\n        ship.setBounce(0.6);\n        ship.setAngle(180)\n        ship.setRotation(pi)\n        if (ship.casing === undefined) { //if full ship object not created already\n            let enemy = new Ship(ship, x, y, 1, 0);\n            enemy.update = ai2;\n            ship.casing = enemy; //just to keep track of the object wrapper\n        }\n        ship.setActive(true);\n        ship.setVisible(true);\n        ship.casing.createTime = Date.now();\n        ship.casing.nonceTime = pmath.Between(0, 6000);\n        ship.casing.targetShip = ships[Math.floor(Math.random() * 2)];\n        //ship.casing.ptx = pmath.Between(100, 700);\n        //ship.casing.pty = pmath.Between(100, 500);\n    }\n}\n\nfunction spawnEnemy3(x, y) {\n    if (enemy3_mode) {\n        let ship = enemies3.get(x, y);\n        ship.setBounce(0.6);\n        ship.setAngle(180)\n        ship.setRotation(pi)\n        if (ship.casing === undefined) { //if full ship object not created already\n            let enemy = new Ship(ship, x, y, 1, 0);\n            enemy.update = ai3;\n            ship.casing = enemy; //just to keep track of the object wrapper\n        }\n        ship.setActive(true);\n        ship.setVisible(true);\n        ship.casing.createTime = Date.now();\n        ship.casing.nonceTime = pmath.Between(0, 6000);\n        ship.casing.targetShip = ships[Math.floor(Math.random() * 2)];\n        ship.casing.ptx = pmath.Between(100, 700);\n        ship.casing.pty = pmath.Between(100, 500);\n    }\n}\n\nfunction spawnEnemy4(x, y) {\n    if (enemy4_mode) {\n        let ship = enemies4.get(x, y);\n        ship.setBounce(0.6);\n        ship.setAngle(180)\n        ship.setRotation(pi)\n        if (ship.casing === undefined) { //if full ship object not created already\n            let enemy = new Ship(ship, x, y, 1, 0);\n            enemy.update = ai4;\n            ship.casing = enemy; //just to keep track of the object wrapper\n        }\n        ship.setActive(true);\n        ship.setVisible(true);\n        ship.casing.createTime = Date.now();\n        ship.casing.nonceTime = pmath.Between(0, 6000);\n        ship.casing.targetShip = ships[Math.floor(Math.random() * 2)];\n        ship.casing.ptx = pmath.Between(100, 700);\n        ship.casing.pty = pmath.Between(100, 500);\n    }\n}\n\nfunction spawnEnemy5(x, y) {\n    if (enemy5_mode) {\n        let ship = enemies5.get(x, y);\n        ship.setBounce(0.6);\n        ship.setAngle(180)\n        ship.setRotation(pi)\n        if (ship.casing === undefined) { //if full ship object not created already\n            let enemy = new Ship(ship, x, y, 1, 0);\n            enemy.update = ai5;\n            ship.casing = enemy; //just to keep track of the object wrapper\n        }\n        ship.setActive(true);\n        ship.setVisible(true);\n        ship.casing.createTime = Date.now();\n        ship.casing.nonceTime = pmath.Between(0, 6000);\n        ship.casing.targetShip = ships[Math.floor(Math.random() * 2)];\n        ship.casing.ptx = pmath.Between(100, 700);\n        ship.casing.pty = pmath.Between(100, 500);\n    }\n}\n\n\n\nclass MainScene extends Phaser.Scene {\n\n\n\n\n    bulletHit (ship, shot) {\n        if (shot.active && ship.active) {\n            let blast = blasts.get(shot.body.position.x, shot.body.position.y);\n            if (blast) {\n                blast.setActive(true);\n                blast.setVisible(true);\n                blast.play('blast');\n                setTimeout(function () {\n                    blast.setActive(false);\n                    blast.setVisible(false);\n                    blast.setPosition(-200, -200);\n                }, 1000);\n            }\n            shot.setPosition(-200, -200);\n            shot.setVelocity(0,0);\n            shot.setActive(false);\n            shot.setVisible(false);\n\n            ship.setPosition(-200, -200);\n            ship.setVelocity(0, 0);\n            ship.setActive(false);\n            ship.setVisible(false);\n\n            if (ship.texture.key === 'player1' || (ship.texture.key === 'player2' && two_player)) {\n                setTimeout(function () {\n                    ship.setActive(true);\n                    ship.setVisible(true);\n                    ship.setPosition(pmath.Between(200, 600), pmath.Between(200, 400));\n                    ship.setVelocity(0, 0);\n                }, 1000);\n            } else if (ship.texture.key !== 'player2') {\n                if (ship.body.position.x > -20 && ship.body.position.x < 820) {\n                    if (ship.body.position.y > -20 && ship.body.position.y < 620) {\n                        if (shot.shooter === 'player1') {\n                            p1score = p1score + 10;\n                            p1scoreText.setText('P1 Score: ' + p1score.toString());\n                        }\n                        if (shot.shooter === 'player2') {\n                            p2score = p2score + 10;\n                            p2scoreText.setText('P2 Score: ' + p2score.toString());\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    constructor ()\n    {\n        super('MainScene');\n    }\n\n\n    preload ()\n    {\n        this.load.plugin('rextexttypingplugin', 'https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rextexttypingplugin.min.js', true);\n        this.load.image('sky', 'static/assets/images/starbgv.png');\n        this.load.image('player1', 'static/assets/images/blueship.png');\n        this.load.image('player2', 'static/assets/images/blueship2.png');\n        this.load.image('enemy1', 'static/assets/images/orangeship.png');\n        this.load.image('enemy2', 'static/assets/images/orangeship2.png');\n        this.load.image('enemy3', 'static/assets/images/orangeship3.png');\n        this.load.image('enemy4', 'static/assets/images/orangeship4.png');\n        this.load.image('enemy5', 'static/assets/images/orangeship5.png');\n        this.load.atlas('shapes', 'static/assets/images/shapes.png', 'static/assets/images/shapes.json');\n        this.load.text('space_dirt', 'static/assets/images/space_dirt.json');\n        this.load.image('goodshot', 'static/assets/images/goodshot.png');\n        this.load.image('badshot', 'static/assets/images/badshot.png');\n        this.load.image('blast1', 'static/assets/images/blast1.png');\n        this.load.image('blast2', 'static/assets/images/blast2.png');\n        this.load.image('blast3', 'static/assets/images/blast3.png');\n        this.load.image('blast4', 'static/assets/images/blast4.png');\n        this.load.image('blast5', 'static/assets/images/blast5.png');\n        this.load.image('blast6', 'static/assets/images/blast6.png');\n\n        this.load.image('null', 'static/assets/images/null.png');\n    }\n\n\n\n    create ()\n    {\n        sky = this.add.tileSprite(400, 300, 800, 600, 'sky');\n        sky.setDepth(-999);\n\n        p1scoreText = this.add.text(16, 16, 'P1 Score: ' + p1score.toString(), { fontSize: '32px', fill: '#a66f3c' });\n        p2scoreText = this.add.text(400, 16, 'P2 Score: ' + p1score.toString(), { fontSize: '32px', fill: '#a66f3c' });\n        //dirt1 = this.add.particles('shapes',  new Function('return ' + this.cache.text.get('space_dirt'))());\n        //dirt1.setDepth(-999);\n\n        textbox = this.make.text({\n            x: 0,\n            y: 400,\n            padding: {\n                left: 64,\n                right: 64,\n                top: 20,\n                bottom: 40,\n                x: 32,    // 32px padding on the left/right\n                y: 16     // 16px padding on the top/bottom\n            },\n            text: '',\n            style: {\n                fontSize: '32px',\n                fontFamily: 'Oxanum',\n                color: '#ffffff',\n                align: 'left',  // 'left'|'center'|'right'|'justify'\n                //backgroundColor: '#fffff',\n                wordWrap: {\n                    width: 750,\n                    useAdvancedWrap: true,\n                },\n                fixedWidth: 800,\n                fixedHeight: 500\n            },\n            add: true\n        });\n        textbox.setDepth(99999);\n        textbox = this.plugins.get('rextexttypingplugin').add(textbox, {\n        })\n\n        let ship = this.physics.add.sprite(100, 450, 'player1');\n        ship.setBounce(0.2);\n        ship.setCollideWorldBounds(true);\n        ships.push(ship)\n\n        ship = this.physics.add.sprite(200, 500, 'player2');\n        ship.setBounce(0.2);\n        ship.setCollideWorldBounds(true);\n        ships.push(ship)\n\n        ships[0] = new Ship(ships[0], 100, 450, 1, 0);\n        ships[1] = new Ship(ships[1], 200, 500, 1, 0);\n        ships[1].ph.setActive(false);\n        ships[1].ph.setVisible(false);\n\n        this.anims.create({\n            key: 'blast',\n            frames: [\n                { key: 'blast1' },\n                { key: 'blast2' },\n                { key: 'blast3' },\n                { key: 'blast4' },\n                { key: 'blast5' },\n                { key: 'blast6' },\n                { key: 'null' },\n            ]\n        })\n\n        blasts = this.physics.add.group({\n            defaultKey: 'blast1',\n            maxSize: 200\n        })\n\n        goodshots = this.physics.add.group({\n            defaultKey: 'goodshot',\n            maxSize: 200\n        });\n\n        badshots = this.physics.add.group({\n            defaultKey: 'badshot',\n            maxSize: 200\n        });\n\n        enemies1 = this.physics.add.group({\n            defaultKey: 'enemy1',\n            maxSize: 100\n        });\n        enemies2 = this.physics.add.group({\n            defaultKey: 'enemy2',\n            maxSize: 100\n        });\n        enemies3 = this.physics.add.group({\n            defaultKey: 'enemy3',\n            maxSize: 100\n        });\n        enemies4 = this.physics.add.group({\n            defaultKey: 'enemy4',\n            maxSize: 100\n        });\n        enemies5 = this.physics.add.group({\n            defaultKey: 'enemy5',\n            maxSize: 100\n        });\n\n\n        this.physics.add.collider(ships[0].ph, ships[1].ph, null, null, this);\n        this.physics.add.collider(ships[1].ph, ships[0].ph, null, null, this);\n        this.physics.add.collider(ships[0].ph, badshots, this.bulletHit, null, this);\n        this.physics.add.collider(ships[1].ph, badshots, this.bulletHit, null, this);\n\n        this.physics.add.collider(ships[0].ph, enemies1, null, null, this);\n        this.physics.add.collider(ships[1].ph, enemies1, null, null, this);\n        this.physics.add.collider(enemies1, goodshots, this.bulletHit, null, this);\n        this.physics.add.collider(enemies1, enemies1, null, null, this);\n\n        this.physics.add.collider(ships[0].ph, enemies2, null, null, this);\n        this.physics.add.collider(ships[1].ph, enemies2, null, null, this);\n        this.physics.add.collider(enemies2, goodshots, this.bulletHit, null, this);\n        this.physics.add.collider(enemies2, enemies2, null, null, this);\n\n        this.physics.add.collider(ships[0].ph, enemies3, this.bulletHit, null, this);\n        this.physics.add.collider(ships[1].ph, enemies3, this.bulletHit, null, this);\n        this.physics.add.collider(enemies3, goodshots, this.bulletHit, null, this);\n        this.physics.add.collider(enemies3, enemies3, null, null, this);\n\n        this.physics.add.collider(ships[0].ph, enemies4, null, null, this);\n        this.physics.add.collider(ships[1].ph, enemies4, null, null, this);\n        this.physics.add.collider(enemies4, goodshots, this.bulletHit, null, this);\n        this.physics.add.collider(enemies4, enemies4, null, null, this);\n\n        this.physics.add.collider(ships[0].ph, enemies5, null, null, this);\n        this.physics.add.collider(ships[1].ph, enemies5, null, null, this);\n        this.physics.add.collider(enemies5, goodshots, this.bulletHit, null, this);\n        this.physics.add.collider(enemies5, enemies5, null, null, this);\n\n\n        this.physics.add.collider(enemies1, enemies2, null, null, this);\n        this.physics.add.collider(enemies1, enemies3, null, null, this);\n        this.physics.add.collider(enemies1, enemies4, null, null, this);\n        this.physics.add.collider(enemies1, enemies5, null, null, this);\n\n        this.physics.add.collider(enemies2, enemies1, null, null, this);\n        this.physics.add.collider(enemies2, enemies3, null, null, this);\n        this.physics.add.collider(enemies2, enemies4, null, null, this);\n        this.physics.add.collider(enemies2, enemies5, null, null, this);\n\n        this.physics.add.collider(enemies3, enemies1, null, null, this);\n        this.physics.add.collider(enemies3, enemies2, null, null, this);\n        this.physics.add.collider(enemies3, enemies4, null, null, this);\n        this.physics.add.collider(enemies3, enemies5, null, null, this);\n\n        this.physics.add.collider(enemies4, enemies1, null, null, this);\n        this.physics.add.collider(enemies4, enemies2, null, null, this);\n        this.physics.add.collider(enemies4, enemies3, null, null, this);\n        this.physics.add.collider(enemies4, enemies5, null, null, this);\n\n        this.physics.add.collider(enemies5, enemies1, null, null, this);\n        this.physics.add.collider(enemies5, enemies2, null, null, this);\n        this.physics.add.collider(enemies5, enemies3, null, null, this);\n        this.physics.add.collider(enemies5, enemies4, null, null, this);\n\n\n        //enemy spawn timer\n        this.time.addEvent({\n            delay: 1000,\n            callback: function () {\n                spawnEnemy1(pmath.Between(100, 700), -100);\n                spawnEnemy2(pmath.Between(100, 700), -100);\n                spawnEnemy3(pmath.Between(100, 700), -100);\n                spawnEnemy4(pmath.Between(100, 700), -100);\n                spawnEnemy5(pmath.Between(100, 700), -100);\n            },\n            callbackScope: this,\n            loop: true\n        });\n\n        this.time.addEvent({\n            delay: 500,\n            callback: function () {\n                textbox.start(\"Chris\\' text\", 10);\n                setTimeout(function () {\n                    textbox.stop();\n                }, 1300);\n            },\n            callbackScope: this,\n            loop: false\n        });\n\n        this.time.addEvent({\n            delay: 2000,\n            callback: function () {\n                textbox.start(\"Faizan\\'s text\", 10);\n                setTimeout(function () {\n                    textbox.stop();\n                }, 1300);\n            },\n            callbackScope: this,\n            loop: false\n        });\n        this.time.addEvent({\n            delay: 3500,\n            callback: function () {\n                textbox.start(\"Will\\'s text\", 10);\n                setTimeout(function () {\n                    textbox.start('');\n                    enemy1_mode = true;\n                }, 1300);\n            },\n            callbackScope: this,\n            loop: false\n        });\n        //stage1\n        setTimeout(function () {\n            enemy1_mode = true;\n            enemy2_mode = false;\n            enemy3_mode = false;\n            enemy4_mode = false;\n            enemy5_mode = false;\n        }, 10000);\n        //stage2\n        setTimeout(function () {\n            enemy1_mode = false;\n            enemy2_mode = true;\n            enemy3_mode = false;\n            enemy4_mode = false;\n            enemy5_mode = false;\n        }, 40000);\n        //stage3\n        setTimeout(function () {\n            enemy1_mode = false;\n            enemy2_mode = false;\n            enemy3_mode = true;\n            enemy4_mode = false;\n            enemy5_mode = false;\n        }, 70000);\n        //stage4\n        setTimeout(function () {\n            enemy1_mode = false;\n            enemy2_mode = false;\n            enemy3_mode = false;\n            enemy4_mode = true;\n            enemy5_mode = false;\n        }, 100000);\n        //stage5\n        setTimeout(function () {\n            enemy1_mode = false;\n            enemy2_mode = false;\n            enemy3_mode = false;\n            enemy4_mode = false;\n            enemy5_mode = true;\n        }, 130000);\n//        //stage 1 and 2\n//        setTimeout(function () {\n//            enemy1_mode = true;\n//            enemy2_mode = true;\n//            enemy3_mode = false;\n//            enemy4_mode = false;\n//            enemy5_mode = false;\n//        }, 160000);\n//        //stage 3 and 5\n//        setTimeout(function () {\n//            enemy1_mode = false;\n//            enemy2_mode = false;\n//            enemy3_mode = true;\n//            enemy4_mode = false;\n//            enemy5_mode = true;\n//        }, 220000);\n//        //stage 1, 3, 4\n//        setTimeout(function () {\n//            enemy1_mode = true;\n//            enemy2_mode = false;\n//            enemy3_mode = true;\n//            enemy4_mode = true;\n//            enemy5_mode = false;\n//        }, 280000);\n//        //stage 2,3,5\n//        setTimeout(function () {\n//            enemy1_mode = false;\n//            enemy2_mode = true;\n//            enemy3_mode = true;\n//            enemy4_mode = false;\n//            enemy5_mode = true;\n//        }, 340000);\n//        //stage 1,2,3,4,5\n//        setTimeout(function () {\n//            enemy1_mode = true;\n//            enemy2_mode = true;\n//            enemy3_mode = true;\n//            enemy4_mode = true;\n//            enemy5_mode = true;\n//        }, 400000);\n//        //clear\n//        setTimeout(function () {\n//            enemy1_mode = false;\n//            enemy2_mode = false;\n//            enemy3_mode = false;\n//            enemy4_mode = false;\n//            enemy5_mode = false;\n//        }, 430000);\n    }\n\n\n\n\n    update ()\n    {\n        // move sky\n        sky.tilePositionY = sky.tilePositionY - 1;\n\n        // get the movement for ship1\n        const kb = this.input.keyboard;\n        let four = kb.addKey(Phaser.Input.Keyboard.KeyCodes.NUMPAD_FOUR).isDown;\n        let six = kb.addKey(Phaser.Input.Keyboard.KeyCodes.NUMPAD_SIX).isDown;\n        let eight = kb.addKey(Phaser.Input.Keyboard.KeyCodes.NUMPAD_EIGHT).isDown;\n        let five = kb.addKey(Phaser.Input.Keyboard.KeyCodes.NUMPAD_FIVE).isDown;\n        let fire =  kb.addKey(Phaser.Input.Keyboard.KeyCodes.NUMPAD_ZERO).isDown;\n        let spec =  kb.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER).isDown;\n        if (!two_player && spec) {\n            ships[1].ph.setActive(true);\n            ships[1].ph.setVisible(true);\n            ships[1].ph.setPosition(210, 300);\n            ships[1].ph.setVelocity(0, 0);\n            two_player = true;\n            enterpressed = Date.now();\n            spec = false;\n        }\n        if (!fire) {\n            zeroheld = false;\n        }\n        fire = fire && !zeroheld; //only fire on the first press\n\n        if (Date.now() - enterpressed < 6000) {\n            spec = false; //only allow shift every 6 seconds\n        }\n        if (spec) {\n            enterpressed = Date.now();\n        }\n\n        if (two_player) {\n            ships[1].update(fire, spec, eight, five, six, four);\n        }\n\n        if (fire) {\n            zeroheld = true;\n        }\n\n        // get the movement for ship2\n        let w = kb.addKey('W').isDown;\n        let a = kb.addKey('A').isDown;\n        let s = kb.addKey('S').isDown;\n        let d = kb.addKey('D').isDown;\n\n        fire = kb.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE).isDown;\n        spec = kb.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT).isDown;\n\n        if (!fire) {\n            spaceheld = false;\n        }\n        fire = fire && !spaceheld; //only fire on the first press\n\n        if (Date.now() - shiftpressed < 6000) {\n            spec = false; //only allow shift every 6 seconds\n        }\n        if (spec) {\n            shiftpressed = Date.now();\n        }\n\n        ships[0].update(fire, spec, w, s, d, a);\n        if (fire) {\n            spaceheld = true;\n        }\n\n        //destroy bullets out of range\n        goodshots.children.each(function (shot) {\n            if (shot.active) {\n                if (offscreen(shot.x, shot.y)) {\n                    shot.setActive(false);\n                    shot.setVisible(false);\n                }\n            }\n        }.bind(this));\n\n        //destroy bullets out of range\n        badshots.children.each(function (shot) {\n            if (shot.active) {\n                if (offscreen(shot.x, shot.y)) {\n                    shot.setActive(false);\n                    shot.setVisible(false);\n                }\n            }\n        }.bind(this));\n\n        //update enemies on screen and destroy enemies out of range\n        enemies1.children.each(function (enemy) {\n            if (enemy.active) {\n                enemy.casing.update(false, false, false, false, false, false);\n                if (offscreen(enemy.body.position.x, enemy.body.position.y)) {\n                    enemy.setActive(false);\n                    enemy.setVisible(false);\n                    enemy.setVelocity(0, 0);\n                }\n            }\n        }.bind(this));\n        enemies2.children.each(function (enemy) {\n            if (enemy.active) {\n                enemy.casing.update(false, false, false, false, false, false);\n                if (offscreen(enemy.body.position.x, enemy.body.position.y)) {\n                    enemy.setActive(false);\n                    enemy.setVisible(false);\n                    enemy.setVelocity(0, 0);\n                }\n            }\n        }.bind(this));\n        enemies3.children.each(function (enemy) {\n            if (enemy.active) {\n                enemy.casing.update(false, false, false, false, false, false);\n                if (offscreen(enemy.body.position.x, enemy.body.position.y)) {\n                    enemy.setActive(false);\n                    enemy.setVisible(false);\n                    enemy.setVelocity(0, 0);\n                }\n            }\n        }.bind(this));\n        enemies4.children.each(function (enemy) {\n            if (enemy.active) {\n                enemy.casing.update(false, false, false, false, false, false);\n                if (offscreen(enemy.body.position.x, enemy.body.position.y)) {\n                    enemy.setActive(false);\n                    enemy.setVisible(false);\n                    enemy.setVelocity(0, 0);\n                }\n            }\n        }.bind(this));\n        enemies5.children.each(function (enemy) {\n            if (enemy.active) {\n                enemy.casing.update(false, false, false, false, false, false);\n                if (offscreen(enemy.body.position.x, enemy.body.position.y)) {\n                    enemy.setActive(false);\n                    enemy.setVisible(false);\n                    enemy.setVelocity(0, 0);\n                }\n            }\n        }.bind(this));\n    }\n}\n\n\n\n\n\n// set the game config\nvar config = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 600,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: { y: 0 },\n            debug: false\n        }\n    },\n    plugins: {\n        global: [{\n            key: 'rextexttypingplugin',\n            start: true\n        }]\n    },\n    scene: [TitleScene, MainScene]\n};\n\n// start the game\nvar game = new Phaser.Game(config);"]}